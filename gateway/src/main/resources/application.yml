server:
  port: 19090

spring:
  application:
    name: gateway
  profiles:
    active: local
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
  cloud:
    gateway:
      routes:
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
        - id: order-docs
          uri: lb://order-service
          predicates:
            - Path=/order-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/api/orders/(?<segment>.*), /api/orders/$\{segment}


        - id: delivery-service
          uri: lb://delivery-service
          predicates:
            - Path=/api/deliveries/**
        - id: delivery-docs
          uri: lb://delivery-service
          predicates:
            - Path=/delivery-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/delivery-service/api/deliveries/(?<segment>.*), /api/deliveries/$\{segment}


        - id: hub-service
          uri: lb://hub-service
          predicates:
            - Path=/api/hubs/**, /api/routes/**
        - id: hub-docs
          uri: lb://hub-service
          predicates:
            - Path=/hub-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/hub-service/api/(?<segment>.*), /api/$\{segment}


        - id: comp-service
          uri: lb://comp-service
          predicates:
            - Path=/api/companys/**
        - id: comp-docs
          uri: lb://comp-service
          predicates:
            - Path=/comp-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/comp-service/api/companys/(?<segment>.*), /api/companys/$\{segment}


        - id: slack-service
          uri: lb://slack-service
          predicates:
            - Path=/api/slack-messages/**
        - id: slack-docs
          uri: lb://slack-service
          predicates:
            - Path=/slack-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/slack-service/api/slack/(?<segment>.*), /api/slack/$\{segment}


        - id: ai-service
          uri: lb://ai-service
          predicates:
            - Path=/api/ai-interlocks/**
        - id: ai-docs
          uri: lb://ai-service
          predicates:
            - Path=/ai-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/ai-service/api/ai/(?<segment>.*), /api/ai/$\{segment}


        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
        - id: user-docs
          uri: lb://user-service
          predicates:
            - Path=/user-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/api/users/(?<segment>.*), /api/users/$\{segment}

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product/**
        - id: product-docs
          uri: lb://product-service
          predicates:
            - Path=/product-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/product-service/api/products/(?<segment>.*), /api/products/$\{segment}



      discovery:
        locator:
          enabled: true
      loadbalancer:
        enabled: true



springdoc:
  enable-native-support: true
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    use-root-path: true
    urls[0]:
      name: Order Service
      url: /order-service/v3/api-docs
    urls[1]:
      name: Delivery Service
      url: /delivery-service/v3/api-docs
    urls[2]:
      name: Hub Service
      url: /hub-service/v3/api-docs
    urls[3]:
      name: Company Service
      url: /comp-service/v3/api-docs
    urls[4]:
      name: Slack Service
      url: /slack-service/v3/api-docs
    urls[5]:
      name: AI Service
      url: /ai-service/v3/api-docs
    urls[6]:
      name: User Service
      url: /user-service/v3/api-docs
    urls[7]:
      name: Product Service
      url: /product-service/v3/api-docs



  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    main:
      allow-bean-definition-overriding: true
    data:
      redis:
        host: localhost
        port: 6379
        username: default
        password: systempass

  resilience4j:
    circuitbreaker:
      enabled: true  # Feign 또는 기타 서비스에서 Circuit Breaker 활성화 여부
      configs:
        default: # 기본 Circuit Breaker 설정
          registerHealthIndicator: true  # 헬스 체크를 활성화하여 상태 모니터링 가능하게 설정
          slidingWindowType: COUNT_BASED  # 슬라이딩 윈도우 방식 (COUNT_BASED: 호출 횟수를 기준, TIME_BASED: 시간 기반)
          slidingWindowSize: 5  # 최근 5개의 요청을 기준으로 Circuit Breaker 동작 여부 결정
          minimumNumberOfCalls: 5  # Circuit Breaker가 활성화되기 위해 최소 5번의 호출 필요
          slowCallRateThreshold: 100  # 느린 요청의 비율이 이 임계치를 초과하면 실패로 간주 (100% 설정)
          slowCallDurationThreshold: 60000  # 느린 호출의 기준 시간 (60초, 즉 60,000ms)
          failureRateThreshold: 40  # 실패율이 40% 이상이면 Circuit Breaker를 OPEN 상태로 변경
          permittedNumberOfCallsInHalfOpenState: 3  # HALF-OPEN 상태에서 허용할 호출 개수 (테스트를 위해 3회 호출 가능)
          waitDurationInOpenState: 20s  # OPEN 상태


management:
  endpoints:
    web:
      exposure:
        include: prometheus

service:
  jwt:
    secret-key: "64+F7IiY66as7Jik7ZiV7KCcIO2ZlOydtO2MheyeheuLiOuLpC4="

eureka:
  client:
    service-url:
      defaultZone: http://localhost:18080/eureka/